---
# tasks file for ansible-role-node_red

- include_vars: "{{ ansible_os_family }}.yml"

- name: Create node_red group
  group:
    name: "{{ node_red_group }}"

- name: Create node_red user
  user:
    name: "{{ node_red_user }}"
    group: "{{ node_red_group }}"
    home: "{{ node_red_db_dir }}"
    comment: "{{ node_red_user }} user"

- include: "install-{{ ansible_os_family }}.yml"

- name: Install node-red
  npm:
    name: "{{ node_red_package }}"
    global: yes
    production: yes
  environment:
    PATH: "/usr/local/bin:{{ ansible_env['PATH'] }}"

- name: Install node_red_extra_npm_packages
  npm:
    name: "{{ item.name }}"
    global: yes
    production: yes
    state: "{{ item.state | default(omit) }}"
  with_items: "{{ node_red_extra_npm_packages }}"

- name: Create node_red_db_dir directory
  file:
    path: "{{ node_red_db_dir }}"
    mode: 0755
    owner: "{{ node_red_user }}"
    group: "{{ node_red_group }}"
    state: directory
  notify: Restart node_red

- name: Create node_red_conf_dir
  file:
    path: "{{ node_red_conf_dir }}"
    state: directory

- name: Create settings.js
  template:
    src: settings.js.j2
    dest: "{{ node_red_conf_file }}"
  notify: Restart node_red

- name: Start node_red
  service:
    name: "{{ node_red_service }}"
    state: started

- name: Wait for node-red to start in task
  wait_for:
    host: "{{ node_red_bind_address.split(':')[0] }}"
    port: "{{ node_red_bind_address.split(':')[1] }}"
